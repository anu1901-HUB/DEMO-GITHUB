# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml


trigger:
- main  

pool:
  vmImage: 'windows-latest'

variables:
  group: 'new variable group'
  storageKey: 'key'
  backupPath: '$(System.DefaultWorkingDirectory)\master.bak' 
  blobName: 'master.bak' # Name of the blob to upload in Azure Blob Storage

steps:
# Step 1: Back up the SQL database
- task: PowerShell@2
  displayName: "Backup SQL Database"
  inputs:
    targetType: 'inline'
    script: |
      Write-Host "Starting SQL Database Backup..."
      Invoke-Sqlcmd -ServerInstance "sql-use-cca-qa-02.database.windows.net" -Database "db-adventurous" -Query "
      BACKUP DATABASE [db-adventurous]
      TO DISK = N'$(backupPath)'
      WITH FORMAT, INIT;"
      Write-Host "Backup Completed. File saved at $(backupPath)."

# Step 2: Upload the backup file to Azure Blob Storage
- task: AzureCLI@2
  displayName: "Upload to Azure Blob Storage"
  inputs:
    azureSubscription: 'test_connection' 
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      echo "Uploading backup file to Azure Blob Storage..."
      az storage blob upload \
        --account-name "stusetest" \
        --account-key "$(storageKey)" \
        --container-name "test" \
        --file "$(backupPath)" \
        --name "$(blobName)"
      echo "Upload Completed."
